{"ast":null,"code":"var _jsxFileName = \"/Users/zyt/Lab-framework/frontend/src/index.tsx\";\nimport React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\n// Error Boundary Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      hasError: true,\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error('Error caught by boundary:', error, errorInfo);\n  }\n  render() {\n    if (this.state.hasError) {\n      var _this$state$error;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Something went wrong.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: (_this$state$error = this.state.error) === null || _this$state$error === void 0 ? void 0 : _this$state$error.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this);\n    }\n    return this.props.children;\n  }\n}\n\n// Root element type check\nconst rootElement = document.getElementById(\"root\");\n\n// Handle missing root element\nif (!rootElement) {\n  throw new Error(\"Failed to find root element\");\n}\n\n// Create and render React root with error handling\nconst root = ReactDOM.createRoot(rootElement);\nroot.render(/*#__PURE__*/_jsxDEV(StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 47,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","StrictMode","ReactDOM","App","jsxDEV","_jsxDEV","ErrorBoundary","Component","constructor","props","state","hasError","error","getDerivedStateFromError","componentDidCatch","errorInfo","console","render","_this$state$error","children","fileName","_jsxFileName","lineNumber","columnNumber","message","rootElement","document","getElementById","Error","root","createRoot"],"sources":["/Users/zyt/Lab-framework/frontend/src/index.tsx"],"sourcesContent":["import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\n// Error Boundary Component\nclass ErrorBoundary extends React.Component<\n  { children: React.ReactNode },\n  { hasError: boolean; error: Error | null }\n> {\n  constructor(props: { children: React.ReactNode }) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.error('Error caught by boundary:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <h1>Something went wrong.</h1>\n          <p>{this.state.error?.message}</p>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\n// Root element type check\nconst rootElement: HTMLElement | null = document.getElementById(\"root\");\n\n// Handle missing root element\nif (!rootElement) {\n  throw new Error(\"Failed to find root element\");\n}\n\n// Create and render React root with error handling\nconst root = ReactDOM.createRoot(rootElement);\nroot.render(\n  <StrictMode>\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </StrictMode>\n);"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,OAAO;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,SAASN,KAAK,CAACO,SAAS,CAGzC;EACAC,WAAWA,CAACC,KAAoC,EAAE;IAChD,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MAAEC,QAAQ,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAK,CAAC;EAC/C;EAEA,OAAOC,wBAAwBA,CAACD,KAAY,EAAE;IAC5C,OAAO;MAAED,QAAQ,EAAE,IAAI;MAAEC;IAAM,CAAC;EAClC;EAEAE,iBAAiBA,CAACF,KAAY,EAAEG,SAA0B,EAAE;IAC1DC,OAAO,CAACJ,KAAK,CAAC,2BAA2B,EAAEA,KAAK,EAAEG,SAAS,CAAC;EAC9D;EAEAE,MAAMA,CAAA,EAAG;IACP,IAAI,IAAI,CAACP,KAAK,CAACC,QAAQ,EAAE;MAAA,IAAAO,iBAAA;MACvB,oBACEb,OAAA;QAAAc,QAAA,gBACEd,OAAA;UAAAc,QAAA,EAAI;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BlB,OAAA;UAAAc,QAAA,GAAAD,iBAAA,GAAI,IAAI,CAACR,KAAK,CAACE,KAAK,cAAAM,iBAAA,uBAAhBA,iBAAA,CAAkBM;QAAO;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAEV;IACA,OAAO,IAAI,CAACd,KAAK,CAACU,QAAQ;EAC5B;AACF;;AAEA;AACA,MAAMM,WAA+B,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;;AAEvE;AACA,IAAI,CAACF,WAAW,EAAE;EAChB,MAAM,IAAIG,KAAK,CAAC,6BAA6B,CAAC;AAChD;;AAEA;AACA,MAAMC,IAAI,GAAG3B,QAAQ,CAAC4B,UAAU,CAACL,WAAW,CAAC;AAC7CI,IAAI,CAACZ,MAAM,cACTZ,OAAA,CAACJ,UAAU;EAAAkB,QAAA,eACTd,OAAA,CAACC,aAAa;IAAAa,QAAA,eACZd,OAAA,CAACF,GAAG;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACN,CACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}